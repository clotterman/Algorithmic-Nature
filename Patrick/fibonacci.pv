size(400, 400)
background(0.8)

# Fibonacci as a recursive function
def fib(n):
    if n < 2:
        return 1
    return fib(n - 1) + fib(n - 2)

#stroke(0)
#nofill()
#x = 5
#y = 5
#for i in range(12, 0, -1):
    # variable s to optimize for speed
 #   s = fib(i)
    # Start at bottom right corner
    # (calculate the from position by using x - s)
  #  line(512, s, 0, 10)
    
stroke(0)
nofill()
x = 5
y = 5
for i in range(20, 0, -1):
    # variable s to optimize for speed
    s = fib(i)
    # Start at bottom right corner
    # (calculate the from position by using x - s)
    line(s, 10, 10, s) 

for i in range(20, s, -1):
    # variable s to optimize for speed
    s = fib(i)
    # Start at bottom right corner
    # (calculate the from position by using x - s)
    line(s, s, 10, s) 
    
for i in range(20, 7, -1):
    # variable s to optimize for speed
    s = fib(i)
    # Start at bottom right corner
    # (calculate the from position by using x - s)
    line(-s, -s, 300, s) 

export ("FIB4.png")

