size(512, 512)
background(0.2, 0.3, 0.6)

# Fibonacci as a recursive function
def fib(n):
    if n < 2:
        return 1
    return fib(n - 1) + fib(n - 2)
#<<<<<<< Updated upstream

def setup():
    global t
    t = 0
    # pass

=======
    
def setup():
    global t
    t = 0
    
    
>>>>>>> Stashed changes
def draw():
    global t
    x = 480
    y = 480
    t = t + 1
    stroke(1)
    strokewidth(9)
    nofill()
    for i in range(14, 0, -1):
        # variable s to optimize for speed
        s = fib(i)
        # Start at bottom right corner
        # (calculate the from position by using x - s)
<<<<<<< Updated upstream
        rotate(30 + t)
=======
    
        rotate(5 + t)
>>>>>>> Stashed changes
        poly(x - s, y - s, s )
        scale(0.7)
    