size(200, 200)
background(1)

# Fibonacci as a recursive function
#def fib(n):
    #if n < 2:
        #return 1
    #return fib(n - 1) + fib(n - 2)

stroke(1)
fill(0)

# Start at center
x = random(WIDTH)
y = random(HEIGHT)
u = random(WIDTH)
z = random(HEIGHT)

# create a variable for the direction for the next circle
direction = 0

#for i in range(16):
    
    # variable s to optimize for speed
    #s = fib(i)
    
    # depending on the direction,
    # calculate the origin of the drawn oval
    # then set the x and y for the next oval
if direction == 0:
    rect(x, y, u, z)
    x = x + u
    y = y + z
elif direction == 270:
    rect(x - u, y, u, z)
    x = x - u
    y = y + z
elif direction == 180:
    rect(x - u, y - z, u, z)
    x = x - u
    y = y - z
elif direction == 90:
    rect(x, y - z, u, z)
    x = x + u
    y = y - s
        
    # Rotate with 90 degrees clockwise
direction = direction - 90
    
    # If the direction becomes negative,
    # fix it to be positive
if (direction == -90):
    direction = 270