size(1000, 1000)
background('deeppink')
size(700, 700 )
background('white')

# Fibonacci as a recursive function
def fib(n):
    if n < 2:
        return 1
    return fib(n - 1) + fib(n - 2)

stroke(0)
pen (0.1)
fill('pink', 'white', 'blue',)
x = 300
y = 300
for i in range(12,11, -1):
    # variable s to optimize for speed
    s = fib(i)
    # Start at bottom right corner
    # (calculate the from position by using x - s)
    oval(x - s, y - s, s, s)

stroke(0)
pen (0.1)
fill('pink', 'white', 'blue',)
x = 700
y = 700
for i in range(12, 11, -1):
    # variable s to optimize for speed
    s = fib(i)
    # Start at bottom right corner
    # (calculate the from position by using x - s)
    oval(x - s, y - s, s, s)

stroke(0)
pen (0.1)
fill('pink', 'white', 'blue',)
x = 300
y = 700
for i in range(12, 11, -1):
    # variable s to optimize for speed
    s = fib(i)
    # Start at bottom right corner
    # (calculate the from position by using x - s)
    oval(x - s, y - s, s, s)


stroke(0)
pen (0.1)
fill('pink', 'white', 'blue',)
x = 700
y = 300
for i in range(12, 11, -1):
    # variable s to optimize for speed
    s = fib(i)
    # Start at bottom right corner
    # (calculate the from position by using x - s)
    oval(x - s, y - s, s, s)

